name: Build latest from main and deploy to Testing and Staging

on:
  workflow_run:
    workflows: [ 'Run Tests' ]
    branches: [ 'main' ]
    types: [ completed ]

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: testing
    steps:
    - name: Checkout latest repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Log into GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}
    - name: Build web container image and push to GHCR
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.prod
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/hathitrust/otis-unstable:${{ github.sha }}
          ghcr.io/hathitrust/otis-unstable:latest

  deploy-testing:
    needs: build
    runs-on: ubuntu-latest
    environment: testing
    steps:
    - name: Deploy to Testing
      uses: mlibrary/deploy-to-kubernetes@v1
      with:
        github_username: ${{ github.actor }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        image: hathitrust/otis-unstable:${{ github.sha }}
        cluster_ca: ${{ secrets.KUBERNETES_CA }}
        cluster_server: ${{ secrets.KUBERNETES_SERVER }}
        namespace_token: ${{ secrets.KUBERNETES_TOKEN_TESTING }}
        namespace: otis-testing

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - name: Deploy to Staging
      uses: mlibrary/deploy-to-kubernetes@v1
      with:
        github_username: ${{ github.actor }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        image: hathitrust/otis-unstable:${{ github.sha }}
        cluster_ca: ${{ secrets.KUBERNETES_CA }}
        cluster_server: ${{ secrets.KUBERNETES_SERVER }}
        namespace_token: ${{ secrets.KUBERNETES_TOKEN_STAGING }}
        namespace: otis-staging
