x-condition-healthy: &healthy
  condition: service_healthy

x-healthcheck-defaults: &healthcheck-defaults
  interval: 5s
  timeout: 10s
  start_period: 10s
  retries: 5

services:
  web:
    build:
      context: .
      target: development
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - gem_cache:/gems
    depends_on:
      mariadb-dev: *healthy
    command: bash -c "rm -f /usr/src/app/tmp/pids/server.pid && bin/init_dev_db.sh && bundle exec rails s -b 0.0.0.0"
    environment:
      - RAILS_ENV=development

  test:
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - gem_cache:/gems
    depends_on:
      mariadb-test: *healthy
    command: bash -c "bundle exec rake test"
    deploy:
      restart_policy:
        condition: none
    environment:
      - RAILS_ENV=test

  system-test:
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - gem_cache:/gems
    depends_on:
      mariadb-test: *healthy
      chrome-server: *healthy
    command: bash -c "bin/run_system_tests.sh"
    deploy:
      restart_policy:
        condition: none

  mariadb-dev:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlroot
      MYSQL_DATABASE: ht_repository
      MYSQL_USER: otis
      MYSQL_PASSWORD: otis
    volumes:
      - ./db/ht_web.sql:/docker-entrypoint-initdb.d/ht_web.sql
    healthcheck:
      <<: *healthcheck-defaults
      test: ['CMD', 'healthcheck.sh', '--su-mysql', '--connect', '--innodb_initialized']

  mariadb-test:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlroot
      MYSQL_DATABASE: ht_repository
      MYSQL_USER: otis
      MYSQL_PASSWORD: otis
    volumes:
      - ./db/ht_web.sql:/docker-entrypoint-initdb.d/ht_web.sql
    healthcheck:
      <<: *healthcheck-defaults
      test: ['CMD', 'healthcheck.sh', '--su-mysql', '--connect', '--innodb_initialized']

  chrome-server:
    image: selenium/standalone-chromium:latest
    restart: always
    healthcheck:
      <<: *healthcheck-defaults
      test: ['CMD', 'curl', '-f', 'http://localhost:4444']

  js:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    command:
      - npm
      - run
      - watch:js

  css:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    command:
      - npm
      - run
      - watch:css

volumes:
  gem_cache:
